# FROM cudabase-dev
FROM w251/cuda:dev-tx2-4.3_b132
FROM w251/keras:dev-tx2-4.3_b132-tf1
FROM sgupta/opencv 

ARG URL=http://169.44.201.108:7002/jetpacks/4.3

RUN apt-get update && apt install -y git pkg-config wget build-essential cmake unzip python3-matplotlib python3-pil 

WORKDIR /tmp
# RUN rm *.deb

RUN apt install -y mosquitto-clients mosquitto
RUN apt install -y python3-pip
RUN pip3 install numpy paho-mqtt 
#RUN pip3 uninstall -y protobuf
RUN pip3 install cython

RUN mkdir /protobuf
WORKDIR /protobuf
RUN git clone -b '3.6.x' https://github.com/google/protobuf.git . && \
    ./autogen.sh && \
    ./configure --prefix=/usr/local 

RUN make -j6 && make install
RUN ldconfig

RUN apt install -y vim
RUN apt install -y libcanberra-gtk-module libcanberra-gtk3-module libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev 

WORKDIR /protobuf/python
RUN python3 setup.py build --cpp_implementation
RUN python3 setup.py install --cpp_implementation
RUN rm -fr /protobuf
WORKDIR /notebooks
###########
RUN git clone --recursive https://github.com/NVIDIA-Jetson/tf_trt_models.git
WORKDIR tf_trt_models
RUN ./install.sh python3

WORKDIR /notebooks
# Expose MQTT ports 
EXPOSE 1883

# Environment
ENV ARCH=aarch64
ENV PATH /usr/sbin:$PATH
ENV DISPLAY :0

#NOTE: run container with "docker run -e DISPLAY=$DISPLAY --privileged -v /tmp:/tmp --rm --env QT_X11_NO_MITSHM=1 yolo ./darknet detector demo cfg/coco.data cfg/yolov3.cfg yolov3.weights -c 1"

RUN rm -f /tmp/*.deb
